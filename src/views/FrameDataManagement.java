package views;

import controllers.APIController;
import controllers.DbOperations;
import controllers.DbRepository;
import java.awt.Image;
import models.TimeSeriesCase;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import models.CountryTimeSeries;

/**
 *
 * @author Pantelis Ioannidis
 * @author Nick Dimitrakarakos
 */

// R2 Διαχείριση δεδομένων Covid19
public class FrameDataManagement extends javax.swing.JFrame {

    DbRepository dbRepository;
    DbOperations dbOperations;

    /**
     * Creates new form FrameDataManagement
     */
    public FrameDataManagement() {
        initComponents();
        setIconImage();
        dbRepository = new DbRepository();
        dbOperations = new DbOperations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonInsertCountries = new javax.swing.JButton();
        jButtonInsertData = new javax.swing.JButton();
        jButtonDeleteCountries = new javax.swing.JButton();
        jButtonDeleteData = new javax.swing.JButton();
        jCheckBoxDeaths = new javax.swing.JCheckBox();
        jCheckBoxConfirmed = new javax.swing.JCheckBox();
        jCheckBoxRecovered = new javax.swing.JCheckBox();
        jCheckBoxLimitCountiesSelection = new javax.swing.JCheckBox();
        jLabelCategoriesLine1 = new javax.swing.JLabel();
        jLabelCategoriesLine2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextMessages = new javax.swing.JTextPane();
        jLabelBackground = new javax.swing.JLabel();

        setTitle("Διαχείριση δεδομένων Covid19");
        setMaximumSize(new java.awt.Dimension(720, 370));
        setMinimumSize(new java.awt.Dimension(720, 370));
        setPreferredSize(new java.awt.Dimension(720, 370));
        setResizable(false);
        getContentPane().setLayout(null);

        jButtonInsertCountries.setText("Εισαγωγή χωρών");
        jButtonInsertCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertCountriesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInsertCountries);
        jButtonInsertCountries.setBounds(60, 60, 190, 25);

        jButtonInsertData.setText("Εισαγωγή δεδομένων");
        jButtonInsertData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertDataActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInsertData);
        jButtonInsertData.setBounds(60, 100, 190, 25);

        jButtonDeleteCountries.setText("Διαγραφή χωρών");
        jButtonDeleteCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCountriesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeleteCountries);
        jButtonDeleteCountries.setBounds(440, 60, 190, 25);

        jButtonDeleteData.setText("Διαγραφή δεδομένων");
        jButtonDeleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteDataActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeleteData);
        jButtonDeleteData.setBounds(440, 100, 190, 25);

        jCheckBoxDeaths.setSelected(true);
        jCheckBoxDeaths.setText("Θάνατοι");
        getContentPane().add(jCheckBoxDeaths);
        jCheckBoxDeaths.setBounds(190, 170, 150, 25);

        jCheckBoxConfirmed.setSelected(true);
        jCheckBoxConfirmed.setText("Κρούσματα");
        getContentPane().add(jCheckBoxConfirmed);
        jCheckBoxConfirmed.setBounds(190, 200, 150, 25);

        jCheckBoxRecovered.setSelected(true);
        jCheckBoxRecovered.setText("Αναρώσεις");
        getContentPane().add(jCheckBoxRecovered);
        jCheckBoxRecovered.setBounds(190, 230, 150, 25);

        jCheckBoxLimitCountiesSelection.setSelected(true);
        jCheckBoxLimitCountiesSelection.setText("Επιλογή περιορισμένων χωρών");
        getContentPane().add(jCheckBoxLimitCountiesSelection);
        jCheckBoxLimitCountiesSelection.setBounds(60, 140, 280, 20);

        jLabelCategoriesLine1.setText("Κατηγορίες");
        getContentPane().add(jLabelCategoriesLine1);
        jLabelCategoriesLine1.setBounds(60, 190, 130, 16);

        jLabelCategoriesLine2.setText("προς εισαγωγή");
        getContentPane().add(jLabelCategoriesLine2);
        jLabelCategoriesLine2.setBounds(60, 210, 130, 16);

        jTextMessages.setEditable(false);
        jTextMessages.setBackground(javax.swing.UIManager.getDefaults().getColor("scrollbar"));
        jScrollPane3.setViewportView(jTextMessages);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(50, 260, 590, 50);

        jLabelBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/covidwallpaper.jpg"))); // NOI18N
        getContentPane().add(jLabelBackground);
        jLabelBackground.setBounds(0, 0, 710, 330);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    private void jButtonInsertCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertCountriesActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\nΕισαγωγή χωρών σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                boolean limitedNumberOfCountries = jCheckBoxLimitCountiesSelection.isSelected();
                //Αντληση δεδομένων(χώρες) απο το API και αποθήκευση στην βάση
                dbOperations.StoreNewCountries(TimeSeriesCase.CONFIRMED, limitedNumberOfCountries);
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("Ολοκληρώθηκε η εισαγωγή χωρών");
            }
        };

        sw1.execute();
    }//GEN-LAST:event_jButtonInsertCountriesActionPerformed

    private void jButtonInsertDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertDataActionPerformed
        DisableAllButtons();
        String estimatedTimed = "3-8";
        if(jCheckBoxLimitCountiesSelection.isSelected())
            estimatedTimed = "1-2";
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ "+estimatedTimed+" λεπτά.\nΕισαγωγή δεδομένων covid σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                boolean limitedNumberOfCountries = jCheckBoxLimitCountiesSelection.isSelected();
                
                if ((!jCheckBoxConfirmed.isSelected() && !jCheckBoxDeaths.isSelected() && !jCheckBoxRecovered.isSelected())) {
                    JOptionPane.showMessageDialog(null, "Δεν έχετε επιλέξει καμία κατηγορία δεδομένων");
                }
                
                //Αν ο χρήστης ζήτησε δεδομένα για Confirmed, αποθήκευσε τα
                if (jCheckBoxConfirmed.isSelected()) {
                    //Αντληση δεδομένων(χώρες,coviddata) για την κατηγορία CONFIRMED απο το API και αποθήκευση στην βάση
                    dbOperations.StoreCovidData(TimeSeriesCase.CONFIRMED, limitedNumberOfCountries);
                }
                //Αν ο χρήστης ζήτησε δεδομένα για Deaths, αποθήκευσε τα
                if (jCheckBoxDeaths.isSelected()) {
                    //Αντληση δεδομένων(χώρες,coviddata) για την κατηγορία DEATHS απο το API και αποθήκευση στην βάση
                    dbOperations.StoreCovidData(TimeSeriesCase.DEATHS, limitedNumberOfCountries);
                }
                //Αν ο χρήστης ζήτησε δεδομένα για Recovered, αποθήκευσε τα
                if (jCheckBoxRecovered.isSelected()) {
                    //Αντληση δεδομένων(χώρες,coviddata) για την κατηγορία RECOVERED απο το API και αποθήκευση στην βάση
                    dbOperations.StoreCovidData(TimeSeriesCase.RECOVERED, limitedNumberOfCountries);
                }
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("Ολοκληρώθηκε η εισαγωγή δεδομένων covid ");
            }
        };

        sw1.execute();
    }//GEN-LAST:event_jButtonInsertDataActionPerformed

    private void jButtonDeleteCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCountriesActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\nΔιαγραφή χωρών σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                //Διαγράφουμε όλες τις χώρες απο την βάση
                dbRepository.DeleteAllCountries();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("Ολοκληρώθηκε η διαγραφή χωρών");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_jButtonDeleteCountriesActionPerformed

    //Διαγραφή δεδομένων covid
    private void jButtonDeleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteDataActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\nΔιαγραφή δεδομένων covid σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                //Διαγράφουμε όλα τα covid data απο την βάση
                dbRepository.DeleteAllCovidData();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("Ολοκληρώθηκε η διαγραφή δεδομένων covid");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_jButtonDeleteDataActionPerformed

    //Κάνουμε disabled τα checkbox ώστε ο χρήστης να μην μπορεί να τα αλλάξει
    public void EnableAllButtons() {
        jButtonDeleteCountries.setEnabled(true);
        jButtonDeleteData.setEnabled(true);
        jButtonInsertCountries.setEnabled(true);
        jButtonInsertData.setEnabled(true);
        jCheckBoxConfirmed.setEnabled(true);
        jCheckBoxDeaths.setEnabled(true);
        jCheckBoxRecovered.setEnabled(true);
        jCheckBoxLimitCountiesSelection.setEnabled(true);
    }

    //Κάνουμε enabled τα checkbox ώστε ο χρήστης να μπορεί να τα αλλάξει
    public void DisableAllButtons() {
        jButtonDeleteCountries.setEnabled(false);
        jButtonDeleteData.setEnabled(false);
        jButtonInsertCountries.setEnabled(false);
        jButtonInsertData.setEnabled(false);
        jCheckBoxConfirmed.setEnabled(false);
        jCheckBoxDeaths.setEnabled(false);
        jCheckBoxRecovered.setEnabled(false);
        jCheckBoxLimitCountiesSelection.setEnabled(false);
    }
    
    //Το Εικονίδιο στην γωνία του παραθύρου
    private void setIconImage() {
        Image image = new ImageIcon(this.getClass().getResource("/resources/covid-19.png")).getImage();
        this.setIconImage(image);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteCountries;
    private javax.swing.JButton jButtonDeleteData;
    private javax.swing.JButton jButtonInsertCountries;
    private javax.swing.JButton jButtonInsertData;
    private javax.swing.JCheckBox jCheckBoxConfirmed;
    private javax.swing.JCheckBox jCheckBoxDeaths;
    private javax.swing.JCheckBox jCheckBoxLimitCountiesSelection;
    private javax.swing.JCheckBox jCheckBoxRecovered;
    private javax.swing.JLabel jLabelBackground;
    private javax.swing.JLabel jLabelCategoriesLine1;
    private javax.swing.JLabel jLabelCategoriesLine2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextMessages;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.APIController;
import controllers.DbOperations;
import models.TimeSeriesCase;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import models.CountryTimeSeries;

/**
 *
 * @author panti
 */
public class FrameDataManagement extends javax.swing.JFrame {

    APIController api;
    DbOperations dbOperations;

    /**
     * Creates new form FrameDataManagement
     */
    public FrameDataManagement() {
        initComponents();
        dbOperations = new DbOperations();
        api = new APIController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnInsertCountries = new javax.swing.JButton();
        btnInsertData = new javax.swing.JButton();
        btnDeleteCountries = new javax.swing.JButton();
        btnDeleteData = new javax.swing.JButton();
        chkDeaths = new javax.swing.JCheckBox();
        chkConfirmed = new javax.swing.JCheckBox();
        chkRecovered = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaMessage = new javax.swing.JTextArea();

        setTitle("Διαχείριση δεδομένων Covid19");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0};
        layout.rowHeights = new int[] {0, 21, 0, 21, 0, 21, 0, 21, 0, 21, 0, 21, 0};
        getContentPane().setLayout(layout);

        btnInsertCountries.setText("Εισαγωγή χωρών");
        btnInsertCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertCountriesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        getContentPane().add(btnInsertCountries, gridBagConstraints);

        btnInsertData.setText("Εισαγωγή δεδομένων");
        btnInsertData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertDataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        getContentPane().add(btnInsertData, gridBagConstraints);

        btnDeleteCountries.setText("Διαγραφή χωρών");
        btnDeleteCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCountriesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        getContentPane().add(btnDeleteCountries, gridBagConstraints);

        btnDeleteData.setText("Διαγραφή δεδομένων");
        btnDeleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        getContentPane().add(btnDeleteData, gridBagConstraints);

        chkDeaths.setSelected(true);
        chkDeaths.setText("Θάνατοι");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(chkDeaths, gridBagConstraints);

        chkConfirmed.setSelected(true);
        chkConfirmed.setText("Κρούσματα");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(chkConfirmed, gridBagConstraints);

        chkRecovered.setSelected(true);
        chkRecovered.setText("Αναρώσεις");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(chkRecovered, gridBagConstraints);

        txtAreaMessage.setEditable(false);
        txtAreaMessage.setColumns(40);
        txtAreaMessage.setLineWrap(true);
        txtAreaMessage.setRows(5);
        txtAreaMessage.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAreaMessage);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertCountriesActionPerformed
        DisableAllButtons();
        txtAreaMessage.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Εισαγωγή χωρών σε εξέλιξη.");
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.CONFIRMED);
                dbOperations.AddCountriesThatAreNotInDB(ltm);
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                txtAreaMessage.setText("");
            }
        };

        sw1.execute();
    }//GEN-LAST:event_btnInsertCountriesActionPerformed

    private void btnInsertDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertDataActionPerformed
        DisableAllButtons();
        txtAreaMessage.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ 2-7 λεπτά.\n Εισαγωγή δεδομένων covid σε εξέλιξη.");
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                if ((!chkConfirmed.isSelected() && !chkDeaths.isSelected() && !chkRecovered.isSelected())) {
                    JOptionPane.showMessageDialog(null, "Δεν έχετε επιλέξει καμία κατηγορία δεδομένων");
                }
                if (chkConfirmed.isSelected()) {
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.CONFIRMED);
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.CONFIRMED);
                }
                if (chkDeaths.isSelected()) {
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.DEATHS);
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.DEATHS);
                }
                if (chkRecovered.isSelected()) {
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.RECOVERED);
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.RECOVERED);
                }
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                txtAreaMessage.setText("");
            }
        };

        // executes the swingworker on worker thread 
        sw1.execute();
    }//GEN-LAST:event_btnInsertDataActionPerformed

    private void btnDeleteCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCountriesActionPerformed
        DisableAllButtons();
        txtAreaMessage.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Διαγραφή χωρών σε εξέλιξη.");
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                dbOperations.DeleteAllCountries();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                txtAreaMessage.setText("");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_btnDeleteCountriesActionPerformed

    private void btnDeleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDataActionPerformed
        DisableAllButtons();
        txtAreaMessage.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Διαγραφή δεδομένων covid σε εξέλιξη.");
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                dbOperations.DeleteAllCovidData();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                txtAreaMessage.setText("");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_btnDeleteDataActionPerformed

    public void EnableAllButtons() {
        btnDeleteCountries.setEnabled(true);
        btnDeleteData.setEnabled(true);
        btnInsertCountries.setEnabled(true);
        btnInsertData.setEnabled(true);
        chkConfirmed.setEnabled(true);
        chkDeaths.setEnabled(true);
        chkRecovered.setEnabled(true);
    }

    public void DisableAllButtons() {
        btnDeleteCountries.setEnabled(false);
        btnDeleteData.setEnabled(false);
        btnInsertCountries.setEnabled(false);
        btnInsertData.setEnabled(false);
        chkConfirmed.setEnabled(false);
        chkDeaths.setEnabled(false);
        chkRecovered.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameDataManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteCountries;
    private javax.swing.JButton btnDeleteData;
    private javax.swing.JButton btnInsertCountries;
    private javax.swing.JButton btnInsertData;
    private javax.swing.JCheckBox chkConfirmed;
    private javax.swing.JCheckBox chkDeaths;
    private javax.swing.JCheckBox chkRecovered;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaMessage;
    // End of variables declaration//GEN-END:variables
}

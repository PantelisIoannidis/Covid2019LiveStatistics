/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.APIController;
import controllers.DbOperations;
import java.awt.Image;
import models.TimeSeriesCase;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import models.CountryTimeSeries;

/**
 *
 * @author Pantelis Ioannidis
 * @author Nick Dimitrakarakos
 */

// R1 Διαχείριση δεδομένων Covid19
public class FrameDataManagement extends javax.swing.JFrame {

    APIController api;
    DbOperations dbOperations;

    /**
     * Creates new form FrameDataManagement
     */
    public FrameDataManagement() {
        initComponents();
        setIconImage();
        dbOperations = new DbOperations();
        api = new APIController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnInsertCountries = new javax.swing.JButton();
        btnInsertData = new javax.swing.JButton();
        btnDeleteCountries = new javax.swing.JButton();
        btnDeleteData = new javax.swing.JButton();
        chkDeaths = new javax.swing.JCheckBox();
        chkConfirmed = new javax.swing.JCheckBox();
        chkRecovered = new javax.swing.JCheckBox();
        chkLimitCountiesSelection = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextMessages = new javax.swing.JTextPane();
        lblBackground = new javax.swing.JLabel();

        setTitle("Διαχείριση δεδομένων Covid19");
        setMaximumSize(new java.awt.Dimension(720, 370));
        setMinimumSize(new java.awt.Dimension(720, 370));
        setPreferredSize(new java.awt.Dimension(720, 370));
        getContentPane().setLayout(null);

        btnInsertCountries.setText("Εισαγωγή χωρών");
        btnInsertCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertCountriesActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertCountries);
        btnInsertCountries.setBounds(60, 60, 190, 32);

        btnInsertData.setText("Εισαγωγή δεδομένων");
        btnInsertData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertData);
        btnInsertData.setBounds(60, 100, 190, 32);

        btnDeleteCountries.setText("Διαγραφή χωρών");
        btnDeleteCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCountriesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteCountries);
        btnDeleteCountries.setBounds(440, 60, 190, 32);

        btnDeleteData.setText("Διαγραφή δεδομένων");
        btnDeleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteData);
        btnDeleteData.setBounds(440, 100, 190, 32);

        chkDeaths.setSelected(true);
        chkDeaths.setText("Θάνατοι");
        getContentPane().add(chkDeaths);
        chkDeaths.setBounds(190, 170, 150, 24);

        chkConfirmed.setSelected(true);
        chkConfirmed.setText("Κρούσματα");
        getContentPane().add(chkConfirmed);
        chkConfirmed.setBounds(190, 200, 150, 24);

        chkRecovered.setSelected(true);
        chkRecovered.setText("Αναρώσεις");
        getContentPane().add(chkRecovered);
        chkRecovered.setBounds(190, 230, 150, 24);

        chkLimitCountiesSelection.setText("Επιλογή περιορισμένων χωρών");
        getContentPane().add(chkLimitCountiesSelection);
        chkLimitCountiesSelection.setBounds(60, 140, 280, 20);

        jLabel1.setText("Κατηγορίες");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 190, 130, 16);

        jLabel2.setText("προς εισαγωγή");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 210, 130, 16);

        jTextMessages.setEditable(false);
        jTextMessages.setBackground(javax.swing.UIManager.getDefaults().getColor("scrollbar"));
        jScrollPane3.setViewportView(jTextMessages);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(50, 260, 590, 50);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/covidwallpaper.jpg"))); // NOI18N
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, 0, 710, 330);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Αν για λόγους ταχύτητας ο χρήστης επιλέξει περιορισμό χωρων, επιστρέφουμε μια λίστα μόνο με 3 χώρες 
    private List<CountryTimeSeries> limitCountries(List<CountryTimeSeries> ltm){
        return ltm.stream()
                .filter(x->x.country.equals("Greece") || x.country.equals("Germany") || x.country.equals("Italy"))
                .collect(Collectors.toList());
    }
    
    private void btnInsertCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertCountriesActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Εισαγωγή χωρών σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                //Πάρε να confirmed δεδομένα απο το API
                List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.CONFIRMED);
                if(chkLimitCountiesSelection.isSelected())
                    ltm=limitCountries(ltm);
                //Αποθήκευσε τις χώρες στην βάση
                dbOperations.AddCountriesThatAreNotInDB(ltm);
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("");
            }
        };

        sw1.execute();
    }//GEN-LAST:event_btnInsertCountriesActionPerformed

    private void btnInsertDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertDataActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ 2-7 λεπτά.\n Εισαγωγή δεδομένων covid σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                if ((!chkConfirmed.isSelected() && !chkDeaths.isSelected() && !chkRecovered.isSelected())) {
                    JOptionPane.showMessageDialog(null, "Δεν έχετε επιλέξει καμία κατηγορία δεδομένων");
                }
                //Αν ο χρήστης ζήτησε δεδομένα για Confirmed
                if (chkConfirmed.isSelected()) {
                    //Πάρε να confirmed δεδομένα απο το API
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.CONFIRMED);
                    if(chkLimitCountiesSelection.isSelected())
                        ltm=limitCountries(ltm);
                    //Αποθήκευσε την χώρα αν δεν υπάρχει και τα δεδομένα της
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.CONFIRMED);
                }
                //Αν ο χρήστης ζήτησε δεδομένα για Deaths
                if (chkDeaths.isSelected()) {
                    //Πάρε να deaths δεδομένα απο το API
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.DEATHS);
                    if(chkLimitCountiesSelection.isSelected())
                        ltm=limitCountries(ltm);
                    //Αποθήκευσε την χώρα αν δεν υπάρχει και τα δεδομένα της
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.DEATHS);
                }
                //Αν ο χρήστης ζήτησε δεδομένα για Recovered
                if (chkRecovered.isSelected()) {
                    //Πάρε να recovered δεδομένα απο το API
                    List<CountryTimeSeries> ltm = api.GetTimeSeries(TimeSeriesCase.RECOVERED);
                    if(chkLimitCountiesSelection.isSelected())
                        ltm=limitCountries(ltm);
                    //Αποθήκευσε την χώρα αν δεν υπάρχει και τα δεδομένα της
                    dbOperations.AddCountriesThatAreNotInDB(ltm);
                    dbOperations.AddTimeSeriesInDatabase(ltm, TimeSeriesCase.RECOVERED);
                }
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("");
            }
        };

        sw1.execute();
    }//GEN-LAST:event_btnInsertDataActionPerformed

    private void btnDeleteCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCountriesActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Διαγραφή χωρών σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {
                //Διαγράφουμε όλες τις χώρες απο την βάση
                dbOperations.DeleteAllCountries();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_btnDeleteCountriesActionPerformed

    //Διαγραφή δεδομέων covid
    private void btnDeleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDataActionPerformed
        DisableAllButtons();
        jTextMessages.setText("ΠΑΡΑΚΑΛΩ ΠΕΡΙΜΕΝΕΤΕ.\n Διαγραφή δεδομένων covid σε εξέλιξη.");
        //Εκτελούμε τις ενέργεις στην βάση και το API σε νήμα για να μην παγώσει το UI
        SwingWorker sw1 = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                //Διαγράφουμε όλα τα covid data απο την βάση
                dbOperations.DeleteAllCovidData();
                return null;
            }

            @Override
            protected void process(List chunks) {

            }

            @Override
            protected void done() {
                EnableAllButtons();
                jTextMessages.setText("");
            }
        };

        sw1.execute();
        
        
    }//GEN-LAST:event_btnDeleteDataActionPerformed

    //Κάνουμε disabled τα checkbox ώστε ο χρήστης να μην μπορεί να τα αλλάξει
    public void EnableAllButtons() {
        btnDeleteCountries.setEnabled(true);
        btnDeleteData.setEnabled(true);
        btnInsertCountries.setEnabled(true);
        btnInsertData.setEnabled(true);
        chkConfirmed.setEnabled(true);
        chkDeaths.setEnabled(true);
        chkRecovered.setEnabled(true);
        chkLimitCountiesSelection.setEnabled(true);
    }

    //Κάνουμε enabled τα checkbox ώστε ο χρήστης να μπορεί να τα αλλάξει
    public void DisableAllButtons() {
        btnDeleteCountries.setEnabled(false);
        btnDeleteData.setEnabled(false);
        btnInsertCountries.setEnabled(false);
        btnInsertData.setEnabled(false);
        chkConfirmed.setEnabled(false);
        chkDeaths.setEnabled(false);
        chkRecovered.setEnabled(false);
        chkLimitCountiesSelection.setEnabled(false);
    }
    
    //Το Εικονίδιο στην γωνία του παραθύρου
    private void setIconImage() {
        Image image = new ImageIcon(this.getClass().getResource("/resources/covid-19.png")).getImage();
        this.setIconImage(image);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDataManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameDataManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteCountries;
    private javax.swing.JButton btnDeleteData;
    private javax.swing.JButton btnInsertCountries;
    private javax.swing.JButton btnInsertData;
    private javax.swing.JCheckBox chkConfirmed;
    private javax.swing.JCheckBox chkDeaths;
    private javax.swing.JCheckBox chkLimitCountiesSelection;
    private javax.swing.JCheckBox chkRecovered;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextMessages;
    private javax.swing.JLabel lblBackground;
    // End of variables declaration//GEN-END:variables
}
